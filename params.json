{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"HumanArm","tagline":"Java model of a simple HumanArm as used by Li06, Martin11, etc","body":"### Les bases\r\nLes commentaires dans les classes sont assez explicites.\r\n\r\nLa classe principale du modèle est 'model/CompleteArm'. Il y a en gros 3 étages\r\npour simuler le bras :\r\n a) passer des consignes données aux muscles à l'activation des muscles. C'est\r\nle rôle de la classe 'model/NeuroControl';\r\n b) passer de l'activation des muscles aux forces exercées sur les\r\narticulations. C'est le rôle de la classe 'model/SimpleMuscle';\r\n c) passer des forces exercées sur les articulations aux mouvement effectifs\r\ndu bras. C'est le rôle de la classe 'model/Arm'.\r\nCes trois étapes sont mise en place dans 'model/CompleteArm'.\r\n\r\nTrois examples très simples sont fournis.\r\n - 'example/ArmConsole' utilise juste une sortie console pour donner la position\r\ndu bras en fonction du temps, quand des consignes sont appliquées.\r\n - 'example/ArmGraphic' montre comment on peut faire une visualisation simple du\r\nbras. Mais le bras n'est pas simulé, juste placé à différentes positions.\r\n - 'example/ExperienceConsole' utilise les consignes du fichier 'data/consigne_example.data'\r\npour simuler le bras et stocker toutes les variables dans le fichier\r\n'data/result_example.data'.\r\n\r\n### Version actuelle : v1.5\r\nA télécharger ici : LINK\r\n\r\n### Anciennes versions\r\n* v1.5 : ArmGraphic amélioré et Experience avec sauvegarde (LINK)\r\n* v1.0 : Fonctionnel avec exemples console et graphic. (LINK)\r\n\r\n"}